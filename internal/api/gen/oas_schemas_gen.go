// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"
)

// Ref: #/components/schemas/ErrorResponse
type ErrorResponse struct {
	// Сообщение об ошибке.
	Error OptString `json:"error"`
	// Код ошибки.
	Code OptInt `json:"code"`
}

// GetError returns the value of Error.
func (s *ErrorResponse) GetError() OptString {
	return s.Error
}

// GetCode returns the value of Code.
func (s *ErrorResponse) GetCode() OptInt {
	return s.Code
}

// SetError sets the value of Error.
func (s *ErrorResponse) SetError(val OptString) {
	s.Error = val
}

// SetCode sets the value of Code.
func (s *ErrorResponse) SetCode(val OptInt) {
	s.Code = val
}

func (*ErrorResponse) getMetricsRes() {}

// Ref: #/components/schemas/Metric
type Metric struct {
	// Уникальный идентификатор метрики.
	ID OptString `json:"id"`
	// Временная метка события.
	Timestamp OptDateTime `json:"timestamp"`
	// Тип события.
	EventType OptString `json:"eventType"`
	// ID пользователя.
	UserId OptString `json:"userId"`
	// Длительность события в миллисекундах.
	DurationMs OptInt `json:"durationMs"`
	// Дополнительные свойства события.
	Properties OptMetricProperties `json:"properties"`
}

// GetID returns the value of ID.
func (s *Metric) GetID() OptString {
	return s.ID
}

// GetTimestamp returns the value of Timestamp.
func (s *Metric) GetTimestamp() OptDateTime {
	return s.Timestamp
}

// GetEventType returns the value of EventType.
func (s *Metric) GetEventType() OptString {
	return s.EventType
}

// GetUserId returns the value of UserId.
func (s *Metric) GetUserId() OptString {
	return s.UserId
}

// GetDurationMs returns the value of DurationMs.
func (s *Metric) GetDurationMs() OptInt {
	return s.DurationMs
}

// GetProperties returns the value of Properties.
func (s *Metric) GetProperties() OptMetricProperties {
	return s.Properties
}

// SetID sets the value of ID.
func (s *Metric) SetID(val OptString) {
	s.ID = val
}

// SetTimestamp sets the value of Timestamp.
func (s *Metric) SetTimestamp(val OptDateTime) {
	s.Timestamp = val
}

// SetEventType sets the value of EventType.
func (s *Metric) SetEventType(val OptString) {
	s.EventType = val
}

// SetUserId sets the value of UserId.
func (s *Metric) SetUserId(val OptString) {
	s.UserId = val
}

// SetDurationMs sets the value of DurationMs.
func (s *Metric) SetDurationMs(val OptInt) {
	s.DurationMs = val
}

// SetProperties sets the value of Properties.
func (s *Metric) SetProperties(val OptMetricProperties) {
	s.Properties = val
}

// Дополнительные свойства события.
type MetricProperties map[string]string

func (s *MetricProperties) init() MetricProperties {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/MetricsListResponse
type MetricsListResponse struct {
	Items []Metric `json:"items"`
	// Общее количество найденных метрик.
	TotalCount OptInt                       `json:"totalCount"`
	Period     OptMetricsListResponsePeriod `json:"period"`
}

// GetItems returns the value of Items.
func (s *MetricsListResponse) GetItems() []Metric {
	return s.Items
}

// GetTotalCount returns the value of TotalCount.
func (s *MetricsListResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetPeriod returns the value of Period.
func (s *MetricsListResponse) GetPeriod() OptMetricsListResponsePeriod {
	return s.Period
}

// SetItems sets the value of Items.
func (s *MetricsListResponse) SetItems(val []Metric) {
	s.Items = val
}

// SetTotalCount sets the value of TotalCount.
func (s *MetricsListResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetPeriod sets the value of Period.
func (s *MetricsListResponse) SetPeriod(val OptMetricsListResponsePeriod) {
	s.Period = val
}

func (*MetricsListResponse) getMetricsRes() {}

type MetricsListResponsePeriod struct {
	From OptDateTime `json:"from"`
	To   OptDateTime `json:"to"`
}

// GetFrom returns the value of From.
func (s *MetricsListResponsePeriod) GetFrom() OptDateTime {
	return s.From
}

// GetTo returns the value of To.
func (s *MetricsListResponsePeriod) GetTo() OptDateTime {
	return s.To
}

// SetFrom sets the value of From.
func (s *MetricsListResponsePeriod) SetFrom(val OptDateTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *MetricsListResponsePeriod) SetTo(val OptDateTime) {
	s.To = val
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMetricProperties returns new OptMetricProperties with value set to v.
func NewOptMetricProperties(v MetricProperties) OptMetricProperties {
	return OptMetricProperties{
		Value: v,
		Set:   true,
	}
}

// OptMetricProperties is optional MetricProperties.
type OptMetricProperties struct {
	Value MetricProperties
	Set   bool
}

// IsSet returns true if OptMetricProperties was set.
func (o OptMetricProperties) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMetricProperties) Reset() {
	var v MetricProperties
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMetricProperties) SetTo(v MetricProperties) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMetricProperties) Get() (v MetricProperties, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMetricProperties) Or(d MetricProperties) MetricProperties {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMetricsListResponsePeriod returns new OptMetricsListResponsePeriod with value set to v.
func NewOptMetricsListResponsePeriod(v MetricsListResponsePeriod) OptMetricsListResponsePeriod {
	return OptMetricsListResponsePeriod{
		Value: v,
		Set:   true,
	}
}

// OptMetricsListResponsePeriod is optional MetricsListResponsePeriod.
type OptMetricsListResponsePeriod struct {
	Value MetricsListResponsePeriod
	Set   bool
}

// IsSet returns true if OptMetricsListResponsePeriod was set.
func (o OptMetricsListResponsePeriod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMetricsListResponsePeriod) Reset() {
	var v MetricsListResponsePeriod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMetricsListResponsePeriod) SetTo(v MetricsListResponsePeriod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMetricsListResponsePeriod) Get() (v MetricsListResponsePeriod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMetricsListResponsePeriod) Or(d MetricsListResponsePeriod) MetricsListResponsePeriod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
